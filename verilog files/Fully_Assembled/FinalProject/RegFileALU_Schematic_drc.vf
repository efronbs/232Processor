////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2011 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 13.4
//  \   \         Application : sch2hdl
//  /   /         Filename : RegFileALU_Schematic_drc.vf
// /___/   /\     Timestamp : 02/13/2015 03:15:09
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\13.4\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -sympath C:/Users/humphrjm/Documents/Xilinx/232FinalProject/FinalProject/ipcore_dir -intstyle ise -family spartan3e -verilog RegFileALU_Schematic_drc.vf -w C:/Users/humphrjm/Documents/Xilinx/232FinalProject/FinalProject/RegFileALU_Schematic.sch
//Design Name: RegFileALU_Schematic
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module RegFileALU_Schematic(AiACOPY, 
                            ALUOut, 
                            CLK, 
                            iorCTRL, 
                            IRwrtCTRL, 
                            IR_IN, 
                            memOWCTRL, 
                            MemO_IN, 
                            RegWrtCTRL, 
                            RESET, 
                            SEIMM, 
                            useFirstRegCTRL, 
                            useRegCTRL, 
                            wAdrsCTRL, 
                            wDatCTRL, 
                            AiAOUT, 
                            AiBOUT, 
                            REG0OUT);

    input [15:0] AiACOPY;
    input [15:0] ALUOut;
    input CLK;
    input iorCTRL;
    input IRwrtCTRL;
    input [15:0] IR_IN;
    input memOWCTRL;
    input [15:0] MemO_IN;
    input RegWrtCTRL;
    input RESET;
    input [15:0] SEIMM;
    input useFirstRegCTRL;
    input useRegCTRL;
    input wAdrsCTRL;
    input [1:0] wDatCTRL;
   output [15:0] AiAOUT;
   output [15:0] AiBOUT;
   output [15:0] REG0OUT;
   
   wire [15:0] IR_OUT;
   wire [15:0] XLXN_1;
   wire [2:0] XLXN_27;
   wire [2:0] XLXN_28;
   wire [2:0] XLXN_29;
   wire [15:0] XLXN_30;
   wire [15:0] XLXN_31;
   wire [2:0] ZeroOut;
   
   register16bit  IRREG (.clk(CLK), 
                        .dataIn(IR_IN[15:0]), 
                        .reset(RESET), 
                        .write(IRwrtCTRL), 
                        .dataOut(IR_OUT[15:0]));
   regFile16bit8reg  XLXI_1 (.clk(CLK), 
                            .regWrt(RegWrtCTRL), 
                            .reset(RESET), 
                            .r1(XLXN_27[2:0]), 
                            .r2(XLXN_28[2:0]), 
                            .wDat(XLXN_30[15:0]), 
                            .wDest(XLXN_29[2:0]), 
                            .m(REG0OUT[15:0]), 
                            .r1out(AiAOUT[15:0]), 
                            .r2out(XLXN_1[15:0]));
   MUX_OneBit  XLXI_2 (.ctrlSlct(iorCTRL), 
                      .in1(XLXN_1[15:0]), 
                      .in2(SEIMM[15:0]), 
                      .muxOut(AiBOUT[15:0]));
   MUX_OneBit_3  XLXI_9 (.ctrlSlct(useRegCTRL), 
                        .in1(ZeroOut[2:0]), 
                        .in2(IR_OUT[11:9]), 
                        .muxOut(XLXN_27[2:0]));
   MUX_OneBit_3  XLXI_10 (.ctrlSlct(useFirstRegCTRL), 
                         .in1(IR_OUT[11:9]), 
                         .in2(IR_OUT[8:6]), 
                         .muxOut(XLXN_28[2:0]));
   ZeroAdder3Bit  XLXI_11 (.constantZero(ZeroOut[2:0]));
   MUX_OneBit_3  XLXI_14 (.ctrlSlct(wAdrsCTRL), 
                         .in1(ZeroOut[2:0]), 
                         .in2(IR_OUT[8:6]), 
                         .muxOut(XLXN_29[2:0]));
   MUX_TwoBit  XLXI_25 (.ctrlSlct(wDatCTRL[1:0]), 
                       .in1(XLXN_31[15:0]), 
                       .in2(ALUOut[15:0]), 
                       .in3(AiACOPY[15:0]), 
                       .in4(SEIMM[15:0]), 
                       .muxOut(XLXN_30[15:0]));
   register16bit  XLXI_26 (.clk(CLK), 
                          .dataIn(MemO_IN[15:0]), 
                          .reset(RESET), 
                          .write(memOWCTRL), 
                          .dataOut(XLXN_31[15:0]));
endmodule
